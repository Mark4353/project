{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\nconst $35da740d59af89ba$var$API = \"https://682364aa65ba058033969579.mockapi.io\";\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    $35da740d59af89ba$var$getPosts();\n    document.getElementById(\"createPostForm\").addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const title = document.getElementById(\"titleInput\").value;\n        const content = document.getElementById(\"contentInput\").value;\n        await $35da740d59af89ba$var$createPost(title, content);\n        e.target.reset();\n    });\n    document.addEventListener(\"click\", async (e)=>{\n        if (e.target.classList.contains(\"deletePostButton\")) {\n            const id = e.target.dataset.id;\n            await $35da740d59af89ba$var$deletePost(id);\n        } else if (e.target.classList.contains(\"editPostButton\")) {\n            const id = e.target.dataset.id;\n            const newTitle = prompt(\"\\u041D\\u043E\\u0432\\u0438\\u0439 \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\");\n            const newContent = prompt(\"\\u041D\\u043E\\u0432\\u0438\\u0439 \\u0437\\u043C\\u0456\\u0441\\u0442\");\n            if (newTitle && newContent) await $35da740d59af89ba$var$updatePost(id, newTitle, newContent);\n        }\n    });\n    document.addEventListener(\"submit\", async (e)=>{\n        if (e.target.classList.contains(\"createCommentForm\")) {\n            e.preventDefault();\n            const id = e.target.dataset.id;\n            const input = e.target.querySelector(\".commentInput\");\n            if (input && input.value.trim()) await $35da740d59af89ba$var$createComment(id, input.value.trim());\n        }\n    });\n});\nasync function $35da740d59af89ba$var$getPosts() {\n    try {\n        const res = await fetch(`${$35da740d59af89ba$var$API}/posts?_embed=comments`);\n        const posts = await res.json();\n        if (Array.isArray(posts)) $35da740d59af89ba$var$renderPosts(posts);\n        else console.error(\"\\u041E\\u0447\\u0456\\u043A\\u0443\\u0432\\u0430\\u0432 \\u043C\\u0430\\u0441\\u0438\\u0432, \\u0430\\u043B\\u0435 \\u043E\\u0442\\u0440\\u0438\\u043C\\u0430\\u0432:\", posts);\n    } catch (e) {\n        console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u043F\\u043E\\u0441\\u0442\\u0456\\u0432:\", e);\n    }\n}\nasync function $35da740d59af89ba$var$createPost(title, content) {\n    await fetch(`${$35da740d59af89ba$var$API}/posts`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            title: title,\n            content: content\n        })\n    });\n    $35da740d59af89ba$var$getPosts();\n}\nasync function $35da740d59af89ba$var$updatePost(id, title, content) {\n    await fetch(`${$35da740d59af89ba$var$API}/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            title: title,\n            content: content\n        })\n    });\n    $35da740d59af89ba$var$getPosts();\n}\nasync function $35da740d59af89ba$var$deletePost(id) {\n    await fetch(`${$35da740d59af89ba$var$API}/posts/${id}`, {\n        method: \"DELETE\"\n    });\n    $35da740d59af89ba$var$getPosts();\n}\nasync function $35da740d59af89ba$var$createComment(postId, text) {\n    await fetch(`${$35da740d59af89ba$var$API}/comments`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            postId: postId,\n            text: text\n        })\n    });\n    $35da740d59af89ba$var$getPosts();\n}\nfunction $35da740d59af89ba$var$renderPosts(posts) {\n    if (!Array.isArray(posts)) {\n        console.error(\"renderPosts: \\u043E\\u0442\\u0440\\u0438\\u043C\\u0430\\u043D\\u0456 \\u0434\\u0430\\u043D\\u0456 \\u043D\\u0435 \\u0454 \\u043C\\u0430\\u0441\\u0438\\u0432\\u043E\\u043C:\", posts);\n        return;\n    }\n    const container = document.getElementById(\"postsContainer\");\n    container.innerHTML = \"\";\n    posts.forEach((post)=>{\n        const div = document.createElement(\"div\");\n        div.classList.add(\"post\");\n        div.innerHTML = `\n      <div class=\"post_main\">\n        <h2 class=\"post_title\">${post.title}</h2>\n        <p class=\"post_content\">${post.content}</p>\n      </div>\n      <div class=\"post_buttons\">\n        <button class=\"editPostButton post_edit_button\" data-id=\"${post.id}\">\\u{420}\\u{435}\\u{434}\\u{430}\\u{433}\\u{443}\\u{432}\\u{430}\\u{442}\\u{438}</button>\n        <button class=\"deletePostButton post_del_button\" data-id=\"${post.id}\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n      </div>\n      <div class=\"comments_box\">\n        <h3 class=\"comment\">\\u{41A}\\u{43E}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\\u{456}</h3>\n        <ul class=\"comments_list\">\n          ${post.comments.length === 0 ? '<li class=\"comment_items\">\\u041D\\u0435\\u043C\\u0430\\u0454 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\\u0432</li>' : \"\"}\n          ${post.comments.map((c)=>`<li>${c.text}</li>`).join(\"\")}\n          ${post.comments.length === 4 ? '<li class=\"comment_items\">\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430 \\u043A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\\u0432 \\u0434\\u043E \\u043F\\u043E\\u0441\\u0442\\u0443 - 4</li>' : \"\"}\n        </ul>\n        <form class=\"createCommentForm\" data-id=\"${post.id}\">\n          ${post.comments.length >= 4 ? \"\" : `<input type=\"text\" class=\"commentInput comment_input\" placeholder=\"\\u{41D}\\u{43E}\\u{432}\\u{438}\\u{439} \\u{43A}\\u{43E}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\" required>`}\n          ${post.comments.length >= 4 ? \"\" : `<button type=\"submit\" class=\"comment_add_button\">\\u{414}\\u{43E}\\u{434}\\u{430}\\u{442}\\u{438} \\u{43A}\\u{43E}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}</button>`}\n        </form>\n      </div>\n    `;\n        container.appendChild(div);\n    });\n}\n\n\n//# sourceMappingURL=project.509fdd9f.js.map\n","const API = \"https://682364aa65ba058033969579.mockapi.io\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  getPosts();\r\n\r\n  document.getElementById(\"createPostForm\").addEventListener(\"submit\", async (e) => {\r\n    e.preventDefault();\r\n    const title = document.getElementById(\"titleInput\").value;\r\n    const content = document.getElementById(\"contentInput\").value;\r\n    await createPost(title, content);\r\n    e.target.reset();\r\n  });\r\n\r\n  document.addEventListener(\"click\", async (e) => {\r\n    if (e.target.classList.contains(\"deletePostButton\")) {\r\n      const id = e.target.dataset.id;\r\n      await deletePost(id);\r\n    } else if (e.target.classList.contains(\"editPostButton\")) {\r\n      const id = e.target.dataset.id;\r\n      const newTitle = prompt(\"Новий заголовок\");\r\n      const newContent = prompt(\"Новий зміст\");\r\n      if (newTitle && newContent) await updatePost(id, newTitle, newContent);\r\n    }\r\n  });\r\n\r\n  document.addEventListener(\"submit\", async (e) => {\r\n    if (e.target.classList.contains(\"createCommentForm\")) {\r\n      e.preventDefault();\r\n      const id = e.target.dataset.id;\r\n      const input = e.target.querySelector(\".commentInput\");\r\n      if (input && input.value.trim()) {\r\n        await createComment(id, input.value.trim());\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\nasync function getPosts() {\r\n  try {\r\n    const res = await fetch(`${API}/posts?_embed=comments`);\r\n    const posts = await res.json();\r\n\r\n    if (Array.isArray(posts)) {\r\n      renderPosts(posts);\r\n    } else {\r\n      console.error(\"Очікував масив, але отримав:\", posts);\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Помилка завантаження постів:\", e);\r\n  }\r\n}\r\n\r\n\r\nasync function createPost(title, content) {\r\n  await fetch(`${API}/posts`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ title, content })\r\n  });\r\n  getPosts();\r\n}\r\n\r\nasync function updatePost(id, title, content) {\r\n  await fetch(`${API}/posts/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ title, content })\r\n  });\r\n  getPosts();\r\n}\r\n\r\nasync function deletePost(id) {\r\n  await fetch(`${API}/posts/${id}`, {\r\n    method: \"DELETE\" });\r\n  getPosts();\r\n}\r\n\r\nasync function createComment(postId, text) {\r\n  await fetch(`${API}/comments`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ postId, text })\r\n  });\r\n  getPosts();\r\n}\r\n\r\nfunction renderPosts(posts) {\r\n  if (!Array.isArray(posts)) {\r\n    console.error(\"renderPosts: отримані дані не є масивом:\", posts);\r\n    return;\r\n  }\r\n  const container = document.getElementById(\"postsContainer\");\r\n  container.innerHTML = \"\";\r\n  posts.forEach(post => {\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"post\");\r\n    div.innerHTML = `\r\n      <div class=\"post_main\">\r\n        <h2 class=\"post_title\">${post.title}</h2>\r\n        <p class=\"post_content\">${post.content}</p>\r\n      </div>\r\n      <div class=\"post_buttons\">\r\n        <button class=\"editPostButton post_edit_button\" data-id=\"${post.id}\">Редагувати</button>\r\n        <button class=\"deletePostButton post_del_button\" data-id=\"${post.id}\">Видалити</button>\r\n      </div>\r\n      <div class=\"comments_box\">\r\n        <h3 class=\"comment\">Коментарі</h3>\r\n        <ul class=\"comments_list\">\r\n          ${post.comments.length === 0 ? '<li class=\"comment_items\">Немає коментарів</li>' : \"\"}\r\n          ${post.comments.map(c => `<li>${c.text}</li>`).join(\"\")}\r\n          ${post.comments.length === 4 ? '<li class=\"comment_items\">Максимальна кількість коментарів до посту - 4</li>' : \"\"}\r\n        </ul>\r\n        <form class=\"createCommentForm\" data-id=\"${post.id}\">\r\n          ${post.comments.length >= 4 ? \"\" : `<input type=\"text\" class=\"commentInput comment_input\" placeholder=\"Новий коментар\" required>`}\r\n          ${post.comments.length >= 4 ? \"\" : `<button type=\"submit\" class=\"comment_add_button\">Додати коментар</button>`}\r\n        </form>\r\n      </div>\r\n    `;\r\n    container.appendChild(div);\r\n  });\r\n}\r\n"],"names":["$35da740d59af89ba$var$API","$35da740d59af89ba$var$getPosts","res","fetch","posts","json","Array","isArray","$35da740d59af89ba$var$renderPosts","console","error","container","document","getElementById","innerHTML","forEach","post","div","createElement","classList","add","title","content","id","comments","length","map","c","text","join","appendChild","e","$35da740d59af89ba$var$createPost","method","headers","body","JSON","stringify","$35da740d59af89ba$var$updatePost","$35da740d59af89ba$var$deletePost","$35da740d59af89ba$var$createComment","postId","addEventListener","preventDefault","value","target","reset","contains","dataset","newTitle","prompt","newContent","input","querySelector","trim"],"version":3,"file":"project.509fdd9f.js.map"}